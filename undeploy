#!/bin/bash
#
# Copyright 2018 Jérôme Gasperi
#
# Licensed under the Apache License, version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

ENV_FILE=./config.env

function showUsage {
    echo ""
    echo "   Undeploy resto based docker instance "
    echo ""
    echo "   Usage $0"
    echo ""
    echo "      -e | --envfile Environnement file (default is ${GREEN}config.env${NC})"
    echo "      -h | --help show this help"
    echo ""
    echo "      !!! This script requires docker !!!"
    echo ""
}

# Parsing arguments
while (( "$#" ));
do
	case "$1" in
        -e|--envfile)
            if [[ "$2" == "" || ${2:0:1} == "-" ]]; then
                showUsage
                echo -e "${RED}[ERROR] Missing config file name${NC}"
                echo -e ""
                exit 1
            fi
            ENV_FILE="$2"
            shift 2 # past argument
            ;;
        -h|--help)
            showUsage
            shift # past argument
            exit 0
            ;;
        --) # end argument parsing
            shift
            break
            ;;
        -*|--*=) # unsupported flags
            showUsage
            echo -e "${RED}[ERROR] Unsupported flag $1${NC}"
            echo -e ""
            exit 1
            ;;
	esac
done

#
# The environement file is mandatory
# It contains all configuration to build and run resto images
#
if [[ ! -f ${ENV_FILE} ]]; then
    showUsage
    echo -e "${RED}[ERROR] The \"${ENV_FILE}\" file does not exist!${NC}"
    echo ""
    exit 1
fi

echo "[INFO] Stopping ${GREEN}resto${NC} docker instance"

DEFAULT_COMPOSE_FILE=docker-compose.yml
if [[ "${COMPOSE_FILE}" != "" ]]; then
    COMPOSE_FILE=${DEFAULT_COMPOSE_FILE}:${COMPOSE_FILE}
else
    COMPOSE_FILE=${DEFAULT_COMPOSE_FILE}
fi
COMPOSE_FILE=${COMPOSE_FILE} ENV_FILE=${ENV_FILE} docker compose down

echo "[INFO] Done !"
echo ""
